@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims
@{
    ViewData["Title"] = "Home Page";
}
@inject IHttpContextAccessor HttpContextAccessor
@{
    var userId = HttpContextAccessor.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<input type="hidden" id="currentUserId" value="@userId"/>

<div class="text-center" style="margin-top: 200px;">
    @if (User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("Admin"))
        {
            <h1 class="display-4">Logged As Admin</h1>
        }
        else
        {
            <h1 class="display-4">Logged As @ViewBag.UserFirstName @ViewBag.UserLastName</h1>
        }
    }
    else
    {
        <h1 class="display-4">Welcome to StuDio!</h1>
    }
</div>

<div class="text-center" style="margin-top: 50px;">
    <!-- Adjusted margin-top -->
    <img src="~/Icons/people.png" alt="logo.png" width="400" height="400">
</div>
@if (User.Identity.IsAuthenticated)
{
    <div id="chat-container" class="position-fixed bottom-1 end-0 p-3" style="max-width: 300px; z-index: 1030; bottom: 125px;">
        <div class="form-group">
            <label for="user-select">Select User:</label>
            <select id="user-select" class="form-control">
                <!-- Users will be populated here by the script below -->
            </select>
        </div>
        <div id="chat-box" class="card shadow-lg">
            <div class="card-header d-flex justify-content-between align-items-center">
                Chat
                <button type="button" class="btn-close" aria-label="Close" onclick="toggleChat()"></button>
            </div>
            <ul id="chat-messages" class="list-group list-group-flush overflow-auto" style="max-height: 300px;">
                <!-- Chat messages will be here -->
            </ul>
            <div class="card-body">
                <form id="chat-form" class="input-group">
                    <input type="text" id="chat-input" class="form-control" placeholder="Type a message..." aria-label="Type a message...">
                    <button class="btn btn-primary" type="submit">Send</button>
                </form>
            </div>
        </div>
    </div>
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    function toggleChat() {
        var chatBox = document.getElementById('chat-box');
        chatBox.style.display = chatBox.style.display === 'none' ? 'block' : 'none';
    }
    
  $(document).ready(function() {
    $.ajax({
        url: '/Chat/GetAllUsers',
        method: 'GET',
        success: function(data) {
            var userSelect = $('#user-select');
            data.forEach(function(user) {
                var fullName = user.firstName + " " + user.lastName;
                userSelect.append($('<option>', {
                    value: user.id,
                    text: fullName
                }));
            });

            if (data.length > 0) {
                fetchMessages(data[0].id);
            }
        },
        error: function(xhr, status, error) {
            console.error("Error fetching users: ", status, error);
        }
    });

    $('#user-select').change(function() {
        fetchMessages(this.value);
    });
});

$("#chat-form").submit(function(e) {
    e.preventDefault();
    var receiverId = $("#user-select").val();
    var messageContent = $("#chat-input").val();

    $.ajax({
        url: '/Chat/SendMessage',
        method: 'POST',
        data: {
            receiverId: receiverId,
            content: messageContent
        },
        success: function() {
            $("#chat-messages").append(`<li>${messageContent}</li>`);
            $("#chat-input").val(''); 
            fetchMessages(receiverId); 
        }
    });
});



function fetchMessages(contactId) {
    $.ajax({
        url: `/Chat/GetMessages?contactId=${contactId}`,
        method: 'GET',
        success: function(messages) {
            $("#chat-messages").empty();
            messages.forEach(function(message) {
                var userId = $('#currentUserId').val();
                var messageClass = message.senderId === userId ? 'sent' : 'received';
                var alignmentStyle = message.senderId === userId ? 'text-align: right;' : 'text-align: left;';
                var backgroundColor = message.senderId === userId ? 'background-color: #90EE90; color: white;' : 'background-color: #E0FFFF;';
                
                // Construct the message content with sender's FirstName
                var messageContent = message.senderFirstName + ": " + message.content;

                var listItem = $(`<li class="list-group-item text-dark" style="${alignmentStyle} ${backgroundColor}"></li>`).text(messageContent);
                $("#chat-messages").append(listItem);
            });
        }
    });
}



setInterval(function() {
    var selectedUser = $("#user-select").val();
    if (selectedUser) {
        fetchMessages(selectedUser);
    }
}, 5000);
</script>